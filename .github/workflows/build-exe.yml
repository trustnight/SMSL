name: Build EXE

# 触发条件
on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: 构建EXE文件
      run: |
        # 使用已有的spec文件构建
        pyinstaller soul_launcher.spec
        
        # 验证构建结果
        if (Test-Path "dist\Soul Launcher.exe") {
            Write-Host "✅ EXE 文件构建成功: dist\Soul Launcher.exe"
            Get-Item "dist\Soul Launcher.exe" | Select-Object Name, Length, LastWriteTime
        } else {
            Write-Error "❌ EXE 文件构建失败，找不到输出文件"
            Write-Host "当前 dist 目录内容:"
            if (Test-Path "dist") { Get-ChildItem dist -Recurse } else { Write-Host "dist 目录不存在" }
            exit 1
        }
        
    - name: 创建发布包
      run: |
        # 创建发布目录
        New-Item -ItemType Directory -Path release -Force
        
        # 复制exe文件
        if (Test-Path "dist\Soul Launcher.exe") {
            Copy-Item "dist\Soul Launcher.exe" release\
        } else {
            Write-Error "找不到构建的 EXE 文件: dist\Soul Launcher.exe"
            exit 1
        }
        
        # 复制必要的配置文件和目录
        if (Test-Path configs) {
            New-Item -ItemType Directory -Path release\configs -Force
            Copy-Item configs\* release\configs\ -Recurse
        }
        
        # 复制样式文件
        if (Test-Path "src\common\styles.css") {
            New-Item -ItemType Directory -Path release\src\common -Force
            Copy-Item src\common\styles.css release\src\common\
        } else {
            Write-Warning "样式文件不存在: src\common\styles.css，跳过复制"
        }
        
        # 创建README
        @"
        Soul Launcher - 游戏服务器管理工具

        使用说明：
        1. 运行 Soul Launcher.exe
        2. 在路径设置中配置服务器路径
        3. 配置服务器参数后即可启动服务器
        "@ | Out-File -FilePath release\README.txt -Encoding UTF8
        
    - name: 压缩发布包
      run: |
        # 使用PowerShell压缩文件
        Compress-Archive -Path release\* -DestinationPath "Soul-Launcher-${{ github.ref_name }}.zip"
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: soul-launcher-exe
        path: |
          Soul-Launcher-*.zip
          dist/Soul Launcher.exe
        retention-days: 30
        
    # 如果是标签推送，创建GitHub Release
    - name: 创建Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Soul-Launcher-*.zip
          dist/Soul Launcher.exe
        body: |
          ## Soul Launcher ${{ github.ref_name }}
          
          ### 新功能
          - 自动构建的EXE版本
          - 包含完整的配置文件和样式
          
          ### 使用方法
          1. 下载 `Soul-Launcher-${{ github.ref_name }}.zip` 并解压
          2. 运行 `Soul Launcher.exe`
          3. 按照README.txt中的说明进行配置
          
          ### 系统要求
          - Windows 10/11
          - .NET Framework 4.7.2 或更高版本
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  # 可选：构建多平台版本
  build-cross-platform:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            executable: Soul Launcher.exe
            artifact_name: soul-launcher-windows
          - os: ubuntu-latest
            executable: soul_launcher
            artifact_name: soul-launcher-linux
          - os: macos-latest
            executable: soul_launcher
            artifact_name: soul-launcher-macos
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: 构建可执行文件
      run: |
        pyinstaller soul_launcher.spec
        
    - name: 上传跨平台构建产物
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.executable }}
        retention-days: 30